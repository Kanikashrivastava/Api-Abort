{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/kanika/Documents/abort/src/components/users.js\";\nimport React, { Component } from \"react\";\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\nimport { indexServices } from \"../services/index\";\nvar abortController = new AbortController();\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Users)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      githubUsers: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUser\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return indexServices.getUsers({\n                signal: abortController.signal\n              });\n\n            case 3:\n              res = _context.sent;\n\n              _this.setState({\n                githubUsers: res ? res.data.results : []\n              });\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"err\", _context.t0.name); // if (err.name === \"AbortError\") return;\n              // throw error;\n\n            case 10:\n              ;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.abortController.abort();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Show\",\n        onClick: this.getUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.githubUsers && this.state.githubUsers.map(function (value, key) {\n        return React.createElement(\"h2\", {\n          key: value.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"name : \", value.email);\n      })));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nexport default Users;","map":{"version":3,"sources":["/home/kanika/Documents/abort/src/components/users.js"],"names":["React","Component","indexServices","abortController","AbortController","Users","githubUsers","getUsers","signal","res","setState","data","results","console","log","name","abort","getUser","state","map","value","key","id","email"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6DAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAGA,IAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;IAEMC,K;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,WAAW,EAAE;AADP,K;;;;;;6BAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEUJ,aAAa,CAACK,QAAd,CAAuB;AAAEC,gBAAAA,MAAM,EAAEL,eAAe,CAACK;AAA1B,eAAvB,CAFV;;AAAA;AAEFC,cAAAA,GAFE;;AAGR,oBAAKC,QAAL,CAAc;AACZJ,gBAAAA,WAAW,EAAEG,GAAG,GAAGA,GAAG,CAACE,IAAJ,CAASC,OAAZ,GAAsB;AAD1B,eAAd;;AAHQ;AAAA;;AAAA;AAAA;AAAA;AAONC,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,YAAIC,IAAvB,EAPM,CAQN;AACA;;AATM;AAUP;;AAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;2CAaa;AACrB,WAAKZ,eAAL,CAAqBa,KAArB;AACD;;;6BAEQ;AACP,aACE,0CACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,OAAO,EAAE,KAAKC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWZ,WAAX,IACC,KAAKY,KAAL,CAAWZ,WAAX,CAAuBa,GAAvB,CAA2B,UAACC,KAAD,EAAQC,GAAR;AAAA,eACzB;AAAI,UAAA,GAAG,EAAED,KAAK,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2BF,KAAK,CAACG,KAAjC,CADyB;AAAA,OAA3B,CAFJ,CAHF,CADF;AAYD;;;;EApCiBtB,S;;AAsCpB,eAAeI,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\nimport { indexServices } from \"../services/index\";\n\n\nconst abortController = new AbortController();\n\nclass Users extends Component {\n  state = {\n    githubUsers: null,\n  };\n\n\n  getUser = async () => {\n    try{\n    const res = await indexServices.getUsers({ signal: abortController.signal });\n    this.setState({\n      githubUsers: res ? res.data.results : []\n    });\n    }catch(err) {\n      console.log(\"err\", err.name);\n      // if (err.name === \"AbortError\") return;\n      // throw error;\n    };\n  };\n\n  componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  render() {\n    return (\n      <>\n        <input type=\"button\" value=\"Show\" onClick={this.getUser} />\n\n        <div>\n          {this.state.githubUsers &&\n            this.state.githubUsers.map((value, key) => (\n              <h2 key={value.id}>name : {value.email}</h2>\n            ))}\n        </div>\n      </>\n    );\n  }\n}\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}